
```markdown
# Stremio Cache Cleaner

This Python script helps you clean the cache of your Stremio server to free up disk space, and shows a notification with the results.

## Requirements

- Python 3
- `libnotify` (for notifications)
- `notify-send` (for sending notifications)
- `dunst` (for customizable notifications)

## Installation

1. **Clone the Repository**: Download or clone this repository to your local machine.
   
   ```bash
   git clone https://github.com/yourusername/stremio-cache-cleaner.git
   ```

2. **Install Dependencies**: Install Python dependencies (if any are listed in `requirements.txt`).

   ```bash
   pip install -r requirements.txt
   ```

   Or install `libnotify` and `dunst` for notifications:

   ```bash
   sudo pacman -S libnotify dunst
   ```

3. **Install dunst (if not already installed)**:
   If you don't have `dunst` installed, run:

   ```bash
   sudo pacman -S dunst
   ```

## Usage

1. **Run the Script**: Execute the script to clean your Stremio cache:

   ```bash
   python3 clean_stremio_cache.py
   ```

   This will:
   - Check the cache directory.
   - Clean the cache (freeing up disk space).
   - Show a notification after completion with the result (how much space was freed).

2. **Notification**: After the cache is cleaned, a notification will pop up showing the result of the operation. If you have `dunst` installed, it will display a styled notification.

---

## Customizing dunst Notifications

You can customize the appearance of your notifications (such as background color, font, and corner radius) by editing the `dunst` configuration file. Here’s how you can do it:

### Location of the dunst Configuration File

The `dunst` configuration file is typically located in:

```bash
~/.config/dunst/dunstrc
```

### Customizing Your Notifications

1. **Change the Background Color**: To change the background color of your notifications, find the `background` field in the `urgency_*` sections (low, normal, critical) and adjust the hex color value.

   Example:
   ```ini
   [urgency_normal]
   background = "#232323"  # Change this to your preferred color
   foreground = "#f0f0f0"
   ```

2. **Set Corner Radius for Rounded Corners**: To give your notifications rounded corners, set the `corner_radius` value to a positive integer (e.g., `corner_radius = 10`).

   Example:
   ```ini
   [global]
   corner_radius = 10  # Adjust for rounded corners
   ```

3. **Change Font**: Change the font for your notifications by adjusting the `font` setting.

   Example:
   ```ini
   [global]
   font = Noto Sans 12
   ```

4. **Position of Notifications**: You can also adjust the position of the notifications on the screen using the `geometry` option.

   Example:
   ```ini
   [global]
   geometry = "320x5+10+60"  # Set the position and size of the notification
   ```

### Restart dunst for Changes to Take Effect

Once you've edited the configuration file, restart `dunst` to apply the changes:

1. **Restart dunst**:
   ```bash
   pkill dunst
   dunst &
   ```

### Example Customization

Here’s an example of a simple customization in the `dunstrc`:

```ini
[global]
geometry = "320x5-25+60"
corner_radius = 10
frame_color = "#232323"
background = "#222222"
foreground = "#ffffff"
font = "Noto Sans 12"
```

This configuration gives your notifications rounded corners, a dark background with light text, and uses a specific font.

---

## Why Dunst?

I initially tried using the default `xfce4-notifyd` for notifications, but I wasn't able to make it work properly on my setup. As a result, I considered `dunst` as an alternative. Dunst is a highly customizable notification daemon that allows much more control over the appearance and behavior of notifications, making it a better fit for this project.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
```

